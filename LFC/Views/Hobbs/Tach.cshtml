@model LFC.ViewModels.HobbsViewModel

<datalist id="pilots">
    @foreach (var u in Model.AllUsers)
    {
        <option value="@u.FullName" />
    }
</datalist>

<p class="text-danger">
    @ViewBag.Message
</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(m => m.Date)
    @Html.HiddenFor(m => m.AirplaneID)
    @Html.HiddenFor(m => m.StartTach)
    @Html.HiddenFor(m => m.EndTach)
    @Html.HiddenFor(m => m.StartHobbs)
    @Html.HiddenFor(m => m.EndHobbs)

    <div class="form-horizontal">
        <h4>Tach Entry for @Model.AirplaneID</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <table>
        <tr>
            <th>Date</th>
            <th>Pilot</th>
            <th>Start Tach</th>
            <th>End Tach</th>
            <th>Delta</th>
        </tr>
        @for (var i = 0; i < Model.TachEntries.Count(); i ++)
        {
        <tr class="data">
            <td>@Html.EditorFor(m => m.TachEntries[i].Date)</td>
            <td>@Html.EditorFor(m => m.TachEntries[i].PilotName, new { htmlAttributes = new { list = "pilots" } })</td>
            <td>@Html.EditorFor(m => m.TachEntries[i].StartTach, new { htmlAttributes = new { @class = "starttach" }})</td>
            <td>@Html.EditorFor(m => m.TachEntries[i].EndTach,   new { htmlAttributes = new { @class = "endtach"}})</td>
            <td class="delta"></td>
        </tr>
        }
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        function updateTachDelta(event) {
            var input = event.target;
            var start = $(input).parent().parent().find('input.starttach');
            var end = $(input).parent().parent().find('input.endtach');
            var delta = $(input).parent().parent().find('td.delta');
            delta.html(end.val() - start.val());
        }
        function checkAddTableRow(event) {
            if (event.target.value != "") {
                $('input.data').off('blur');
                $('input.data').removeClass('data');
                addTableRow();
            }
        }
        function addTableRow() {
            var maxRow = 0;
            $('tr.data').each(function () {
                maxRow++;
            });
            row = $("<tr class='data'>");
            row.append('<td><input class="data" name="TachEntries[' + maxRow + '].Date" type="datetime" /></td>');
            row.append('<td><input class="data" list="pilots" name="TachEntries[' + maxRow + '].PilotName" /></td>');
            row.append('<td><input class="data starttach" name="TachEntries[' + maxRow + '].StartTach" /></td>');
            row.append('<td><input class="data endtach" name="TachEntries[' + maxRow + '].EndTach" /></td>');
            row.append('<td class="delta"></td>')
            $('table tr:last').after(row);
            $('input.data').blur(function (event) {
                checkAddTableRow(event);
            });
            $('input.starttach').add('input.endtach').off('change').change(function (event) {
                updateTachDelta(event);
            });
        }

    $(document).ready(function () {
        var input = $('#TachEntries_0__PilotName');
        if (input.val() == "") {
            $("tr.data").remove();
            addTableRow();
        } else {
            $('table tr:last').find('input').addClass('data').blur(function (event) {
                checkAddTableRow(event);
            });
        }
        $('input.starttach').add('input.endtach').change(function (event) {
            updateTachDelta(event);
        }).change();
    });
    </script>
}
