@model LFC.ViewModels.HobbsViewModel

<datalist id="pilots">
    @foreach (var u in Model.AllUsers)
    {
        <option value="@u.FullName" />
    }
</datalist>

<p class="text-danger">
    @ViewBag.Message
</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(m => m.Date)
    @Html.HiddenFor(m => m.AirplaneID)
    @Html.HiddenFor(m => m.StartTach)
    @Html.HiddenFor(m => m.EndTach)
    @Html.HiddenFor(m => m.StartHobbs)
    @Html.HiddenFor(m => m.EndHobbs)

    <div class="form-horizontal">
        <h4>Tach Entry for @Model.AirplaneID</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
   
        var total = Model.EndTach - Model.StartTach;
        <input type="hidden" id="original_total" value="@total" />
    
    <table>
        <tr>
            <th>Date</th>
            <th>Pilot</th>
            <th>Start Tach</th>
            <th>End Tach</th>
            <th>Delta</th>
            <th></th>
        </tr>
        @for (var i = 0; i < Model.TachEntries.Count(); i ++)
        {
        <tr class="data">
            <td>@Html.EditorFor(m => m.TachEntries[i].Date, new { htmlAttributes = new { @class = "date" } })</td>
            <td>@Html.EditorFor(m => m.TachEntries[i].PilotName, new { htmlAttributes = new { list = "pilots" } })</td>
            <td>@Html.EditorFor(m => m.TachEntries[i].StartTach, new { htmlAttributes = new { @class = "starttach" }})</td>
            <td>@Html.EditorFor(m => m.TachEntries[i].EndTach,   new { htmlAttributes = new { @class = "endtach"}})</td>
            <td class="delta"></td>
            <td class="text-danger">
                @Html.ValidationMessageFor(m => m.TachEntries[i].Date)
                @Html.ValidationMessageFor(m => m.TachEntries[i].PilotName)
                @Html.ValidationMessageFor(m => m.TachEntries[i].StartTach)
                @Html.ValidationMessageFor(m => m.TachEntries[i].EndTach)
            </td>
        </tr>
        }
        <tr>
            <td></td>
            <td>Remaining</td>
            <td id="remaining">
                @total
            </td>
            <td>Subtotal</td>
            <td id="total">

            </td>
        </tr>
    </table>
    <div class="form-group">
        <div class="col-md-10">
            <input type="submit" value="Submit" class="btn btn-default" />
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        function isValidDate(date) {
            if (Object.prototype.toString.call(date) !== "[object Date]")
                return false;
            return !isNaN(date.getTime());
        }

        function enlargeDate(event) {
            var input = event.target;
            var val = $(input).val();

            if (val == "")
                return;

            var date = new Date(val);
            if (!isValidDate(date)) {
                var now = new Date();
                now.setTime(Date.now());
                var month = parseInt(val).toString();
                var len = month.length + 1;
                var sub = val.substr(len, val.length - len);
                var day = sub;
                val = month + '/' + day + '/' + now.getFullYear();
                date = new Date(val);
            }
            if (!isValidDate(date)) {
                return;
            }
            val = (date.getMonth()+1) + '/' + date.getDate() + '/' + date.getFullYear();
            $(input).val(val);
        }

        function enlargeTach(input) {
            var val = parseFloat($(input).val());
            if (val < 100) {
                var starttach = $(input).parent().parent().find('input.starttach').val();
                var hundreds = Math.floor(starttach / 100) * 100;
                val += parseFloat(hundreds);
                if (val < starttach)
                    val += parseFloat(100);
            }
            $(input).val(val).change();
        }

        function enlargeStartTach(event) {
            var input = event.target;
            var val = parseFloat($(input).val());
            if (val < 100) {
                var fullstart = $(input).parent().parent().find('input.fullstart').val();
                var hundreds = Math.floor(fullstart / 100) * 100;
                val += parseFloat(hundreds);
                $(input).val(val).change();
            }
        }

        function updateStartTach(event) {
            if ($(event.target).val() == "")
                return;

            enlargeTach(event.target);
            var tach = event.target.value;
            if ($('input.data.fullstart').val() == "")
                $('input.data.fullstart').val(tach);
            if ($('input.data.starttach').val() == "")
                $('input.data.starttach').val(tach);
        }

        function updateTachDelta(event) {
            var input = event.target;
            var start = $(input).parent().parent().find('input.starttach');
            var end = $(input).parent().parent().find('input.endtach');
            var delta = $(input).parent().parent().find('td.delta');
            delta.html((end.val() - start.val()).toFixed(2));

            var total = 0;
            var deltas = $('td.delta');
            deltas.each(function (i, elem) {
                var val = $(elem).html();
                if (val == "")
                    return;
                total += parseFloat(val);
            });
            $('#total').html(total.toFixed(2));
            var original_total = parseFloat($('#original_total').val());
            $('#remaining').html((original_total - total).toFixed(2));
        }

        function checkAddTableRow(event) {
                var row = $(event.target).parent().parent();
                var date = $(row).find('input.date').val();
                $('input.data').off('focus');
                $('input.data').removeClass('data');
                addTableRow(date);
        }

        function addTableRow(date) {
            var maxRow = 0;
            $('tr.data').each(function () {
                maxRow++;
            });
            row = $("<tr class='data'>");
            row.append('<td><input class="data date" name="TachEntries[' + maxRow + '].Date" type="datetime" /></td>');
            row.append('<td><input class="data" list="pilots" name="TachEntries[' + maxRow + '].PilotName" /></td>');
            row.append('<td><input class="data starttach" name="TachEntries[' + maxRow + '].StartTach" /></td>');
            row.append('<td><input class="data endtach" name="TachEntries[' + maxRow + '].EndTach" /></td>');
            row.append('<td class="delta"></td>')
            row.append('<input type="hidden" class="data fullstart" />')
            $('table tr:last').before(row);
            if (date)
                $('input.data.date').val(date);
            $('input.endtach.data').focus(function (event) {
                checkAddTableRow(event);
            });
            $('input.endtach.data').blur(function (event) {
                updateStartTach(event);
            });
            $('input.starttach.data').blur(function (event) {
                enlargeStartTach(event);
            });
            $('input.date.data').blur(function (event) {
                enlargeDate(event);
            });
            $('input.starttach').add('input.endtach').off('change').change(function (event) {
                updateTachDelta(event);
            });
        }

    $(document).ready(function () {
        var input = $('#TachEntries_0__PilotName');
        if (input.val() == "") {
            $("tr.data").remove();
            addTableRow();

            var starttach = $('#StartTach').val();
            $('input.fullstart').val(starttach);
        } else {
            var lastrow = $('table tr:last');
            lastrow.remove();

            $("tr.data").removeClass('data');
            $('table tr:last').find('input').addClass('data');
            $('table tr:last').find('input.endtach').focus(function (event) {
                checkAddTableRow(event);
            });
            $('tr:last').after(lastrow);
        }
        $('input.starttach').add('input.endtach').change(function (event) {
            updateTachDelta(event);
        }).change();
        $('input.endtach').blur(function (event) {
            updateStartTach(event);
        });
        $('input.starttach').blur(function (event) {
            enlargeStartTach(event);
        });
        $('input.date').blur(function (event) {
            enlargeDate(event);
        });

        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                var input = event.target;
                var row = $(input).parent().parent();
                var next_input = row.next().find('input.date');
                next_input.focus();
                event.preventDefault();
                return false;
            }
        });
    });
    </script>
}
